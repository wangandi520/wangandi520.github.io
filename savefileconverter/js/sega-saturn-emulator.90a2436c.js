"use strict";(self["webpackChunksave_file_converter"]=self["webpackChunksave_file_converter"]||[]).push([[509],{3933:function(e,t,a){a.r(t),a.d(t,{default:function(){return w}});var r=function(){var e=this,t=e._self._c;return t("div",{staticClass:"home"},[t("ConvertSegaSaturnEmulator")],1)},n=[],s=function(){var e=this,t=e._self._c;return t("div",[t("b-container",[t("b-row",{attrs:{"no-gutters":"","align-h":"center","align-v":"start"}},[t("b-col",{attrs:{sm:"12",md:"5","align-self":"start"}},[t("b-row",{attrs:{"no-gutters":"","align-h":"center","align-v":"start"}},[t("b-col",{attrs:{cols:"12"}},[t("b-jumbotron",{class:"md"===e.$mq?"fix-jumbotron":"",attrs:{fluid:"","header-level":e._f("mq")(e.$mq,{xs:5,sm:5,md:5,lg:5,xl:4})},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("Sega Saturn")]},proxy:!0}])})],1)],1),"convertToRaw"===this.conversionDirection?t("div",[t("input-file",{attrs:{errorMessage:this.errorMessage,placeholderText:"Choose a file to convert",leaveRoomForHelpIcon:!1},on:{load:function(t){return e.readSegaSaturnSaveData(t)}}}),t("file-list",{attrs:{display:null!==this.segaSaturnSaveData,files:this.getFileListNames()},on:{change:function(t){return e.changeSelectedSaveData(t)}},model:{value:e.selectedSaveData,callback:function(t){e.selectedSaveData=t},expression:"selectedSaveData"}})],1):t("div",[t("output-filename",{attrs:{leaveRoomForHelpIcon:!1},model:{value:e.outputFilename,callback:function(t){e.outputFilename=t},expression:"outputFilename"}}),t("sega-cd-save-type-selector",{attrs:{value:this.segaCdSaveType,ramCartText:"Backup cartridge"},on:{change:function(t){return e.changeSegaCdSaveType(t)}}})],1)],1),t("b-col",{attrs:{sm:"12",md:"2",lg:"2",xl:"2","align-self":"start"}},[t("conversion-direction",{attrs:{horizontalLayout:["md","lg","xl"],verticalLayout:["xs","sm"],conversionDirection:this.conversionDirection},on:{change:function(t){return e.changeConversionDirection(t)}}})],1),t("b-col",{attrs:{sm:"12",md:"5","align-self":"start"}},[t("b-row",{attrs:{"no-gutters":"","align-h":"center","align-v":"start"}},[t("b-col",{attrs:{cols:"12"}},[t("b-jumbotron",{class:"md"===e.$mq?"fix-jumbotron":"",attrs:{fluid:"","header-level":e._f("mq")(e.$mq,{xs:5,sm:5,md:5,lg:5,xl:4})},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("Individual saves")]},proxy:!0}])})],1)],1),"convertToRaw"===this.conversionDirection?t("div",[t("output-filename",{model:{value:e.outputFilename,callback:function(t){e.outputFilename=t},expression:"outputFilename"}})],1):t("div",[t("input-file",{attrs:{errorMessage:this.errorMessage,placeholderText:"Choose files to add (*.BUP)",acceptExtension:".BUP",leaveRoomForHelpIcon:!1,allowMultipleFiles:!0},on:{load:function(t){return e.readIndividualFileSaveData(t)}}}),t("file-list",{attrs:{display:null!==this.segaSaturnSaveData,files:this.getFileListNames(),enabled:!1,showMessageWhenEmpty:!1}})],1)],1)],1),t("b-row",{staticClass:"justify-content-md-center",attrs:{"align-h":"center"}},[t("b-col",{attrs:{cols:"auto",sm:"4",md:"3",lg:"2","align-self":"center"}},[t("b-button",{staticClass:"sega-saturn-emulator-convert-button",attrs:{variant:"success",block:"",disabled:this.convertButtonDisabled},on:{click:function(t){return e.convertFile()}}},[e._v(" Convert! ")])],1)],1),t("b-row",[t("b-col",[t("div",{staticClass:"help"},[e._v(" Help: how can I "),t("router-link",{attrs:{to:"/original-hardware?sort=saturn"}},[e._v("copy save files to and from a Sega Saturn console")]),e._v("? ")],1)])],1)],1)],1)},i=[],o=a(3162),l=a(3313),u=a(1044),c=a(2405),S=a(5482),v=a(1302),h=a(8509),g=a(1165),m=a(5451),d=a(1731),p={name:"ConvertSegaSaturnEmulator",data(){return{segaSaturnSaveData:null,bupsArray:null,saveFiles:null,errorMessage:null,inputFilename:null,outputFilename:null,conversionDirection:"convertToRaw",segaCdSaveType:"internal-memory",selectedSaveData:null,outputBlockSize:g.Z.INTERNAL_BLOCK_SIZE}},components:{ConversionDirection:S.Z,InputFile:u.Z,OutputFilename:c.Z,FileList:v.Z,SegaCdSaveTypeSelector:h.Z},computed:{convertButtonDisabled(){const e="convertToRaw"===this.conversionDirection||null===this.selectedSaveData;return!this.segaSaturnSaveData||0===this.segaSaturnSaveData.getSaveFiles().length||!e||!this.outputFilename}},methods:{getFileListNames(){return null!==this.segaSaturnSaveData&&null!==this.segaSaturnSaveData.getSaveFiles()?this.segaSaturnSaveData.getSaveFiles().map((e=>({displayText:`${e.name} - ${e.comment}`}))):[]},changeConversionDirection(e){this.conversionDirection=e,this.segaSaturnSaveData=null,this.bupsArray=null,this.saveFiles=null,this.errorMessage=null,this.inputFilename=null,this.outputFilename=null,this.selectedSaveData=null,this.segaCdSaveType="internal-memory",this.outputBlockSize=g.Z.INTERNAL_BLOCK_SIZE},changeSelectedSaveData(e){this.segaSaturnSaveData.getSaveFiles().length>0?(this.selectedSaveData=e,this.outputFilename=`${this.segaSaturnSaveData.getSaveFiles()[this.selectedSaveData].name}.BUP`):(this.selectedSaveData=null,this.outputFilename=null)},changeSegaCdSaveType(e){this.segaCdSaveType!==e&&(this.segaCdSaveType=e,this.outputBlockSize="internal-memory"===e?g.Z.INTERNAL_BLOCK_SIZE:g.Z.CARTRIDGE_BLOCK_SIZE,this.tryToCreateSegaSaturnSaveDataFromSaveFiles())},readSegaSaturnSaveData(e){this.errorMessage=null,this.selectedSaveData=null,this.inputFilename=e.filename;try{this.segaSaturnSaveData=d.Z.createFromSegaSaturnData(e.arrayBuffer),this.bupsArray=m.Z.convertSaveFilesToBups(this.segaSaturnSaveData.getSaveFiles()),this.changeSelectedSaveData(0)}catch(t){this.errorMessage="File appears to not be in the correct format",this.segaSaturnSaveData=null,this.bupsArray=null,this.saveFiles=null,this.selectedSaveData=null}},readIndividualFileSaveData(e){this.errorMessage=null,this.selectedSaveData=null,this.inputFilename=null;try{this.bupsArray=e.map((e=>e.arrayBuffer)),this.saveFiles=m.Z.convertBupsToSaveFiles(this.bupsArray),this.tryToCreateSegaSaturnSaveDataFromSaveFiles()}catch(t){this.errorMessage=t.message,this.segaSaturnSaveData=null,this.bupsArray=null,this.saveFiles=null,this.selectedSaveData=null}},tryToCreateSegaSaturnSaveDataFromSaveFiles(){if(null!==this.saveFiles&&null!==this.outputBlockSize){this.errorMessage=null,this.selectedSaveData=null,this.inputFilename=null;try{this.segaSaturnSaveData=g.Z.createFromSaveFiles(this.saveFiles,this.outputBlockSize);const e="internal-memory"===this.segaCdSaveType?"bkr":"bcr";this.segaSaturnSaveData.getSaveFiles().length>0?this.outputFilename=`${l.Z.convertDescriptionToFilename(this.segaSaturnSaveData.getSaveFiles()[0].name)}.${e}`:this.outputFilename=`output.${e}`}catch(e){this.errorMessage=e.message,this.segaSaturnSaveData=null,this.selectedSaveData=null,this.outputFilename=null}}},convertFile(){let e=null;e="convertToRaw"===this.conversionDirection?this.bupsArray[this.selectedSaveData]:this.segaSaturnSaveData.getArrayBuffer();const t=new Blob([e],{type:"application/octet-stream"});(0,o.saveAs)(t,this.outputFilename)}}},f=p,F=a(1001),y=(0,F.Z)(f,s,i,!1,null,"0702dbf2",null),D=y.exports,b={name:"SegaSaturnEmulatorView",components:{ConvertSegaSaturnEmulator:D}},Z=b,C=(0,F.Z)(Z,r,n,!1,null,null,null),w=C.exports},5451:function(e,t,a){a.d(t,{Z:function(){return y}});a(3408),a(4590),a(3462),a(3767),a(8585),a(8696);var r=a(1165),n=a(7313),s=a(3313);const i=!1,o=64,l="Vmem",u=0,c="US-ASCII",S=4,v=16,h=r.Z.ARCHIVE_ENTRY_NAME_LENGTH+1,g=28,m=r.Z.ARCHIVE_ENTRY_COMMENT_LENGTH+1,d=39,p=40,f=44,F=52;class y{static convertSaveFilesToBups(e){return e.map(((e,t)=>{let a=s.Z.getFilledArrayBuffer(o,0);a=s.Z.setMagic(a,u,l,c),a=s.Z.setString(a,v,e.name,r.Z.ARCHIVE_ENTRY_NAME_ENCODING,h-1),a=s.Z.setString(a,g,e.comment,r.Z.ARCHIVE_ENTRY_COMMENT_ENCODING,m-1);const n=new DataView(a);return n.setUint32(S,t,i),n.setUint8(d,e.languageCode),n.setUint32(p,e.dateCode,i),n.setUint32(f,e.saveSize,i),n.setUint32(F,e.dateCode,i),s.Z.concatArrayBuffers([a,e.rawData])}))}static convertBupsToSaveFiles(e){return e.map((e=>{const t=e.slice(0,o),a=new DataView(t),S=new Uint8Array(t),y=e.slice(o);try{s.Z.checkMagic(t,u,l,c)}catch(E){throw new Error("This does not appear to be a Sega Saturn save file in .BUP format")}const D=a.getUint8(d),b=a.getUint32(p,i),Z=a.getUint32(F,i),C=a.getUint32(f,i),w=0!==b?b:Z;if(C!==y.byteLength)throw new Error(`Specified save size of ${C} bytes does not match actual save size of ${y.byteLength} bytes`);return{name:s.Z.readNullTerminatedString(S,v,r.Z.ARCHIVE_ENTRY_NAME_ENCODING,h-1),languageCode:D,language:n.Z.getLanguageString(D),comment:s.Z.readNullTerminatedString(S,g,r.Z.ARCHIVE_ENTRY_COMMENT_ENCODING,m-1),dateCode:w,date:n.Z.getDate(w),saveSize:C,rawData:y}}))}}},1731:function(e,t,a){a.d(t,{Z:function(){return g}});var r=a(1165),n=a(6693);class s{static createWithNewSize(){}static createFromSegaSaturnData(e){let t=null;try{t=n.Z.decompress(e)}catch(a){t=e}return r.Z.createFromSegaSaturnData(t)}static createFromSaveFiles(e,t){const a=r.Z.createFromSaveFiles(e,t);return t===r.Z.CARTRIDGE_BLOCK_SIZE?new r.Z(n.Z.compress(a.getArrayBuffer()),a.getSaveFiles(),a.getVolumeInfo()):a}}var i=a(4230);const o=255;class l{static createWithNewSize(){}static createFromSegaSaturnData(e){if(!i.Z.isByteExpanded(e))throw new Error("This does not appear to be a yabause save file");const t=i.Z.byteCollapse(e);return r.Z.createFromSegaSaturnData(t)}static createFromSaveFiles(e,t){const a=r.Z.createFromSaveFiles(e,t);return new r.Z(i.Z.byteExpand(a.getArrayBuffer(),o),a.getSaveFiles(),a.getVolumeInfo())}}const u=255,c=64,S=8388608;class v{static createWithNewSize(){}static createFromSegaSaturnData(e){if(!i.Z.isByteExpanded(e))throw new Error("This does not appear to be a yaba sanshiro save file");const t=i.Z.byteCollapse(e);return r.Z.createFromSegaSaturnData(t,c)}static createFromSaveFiles(e){const t=r.Z.createFromSaveFiles(e,c,S/2);return new r.Z(i.Z.byteExpand(t.getArrayBuffer(),u),t.getSaveFiles(),t.getVolumeInfo())}}const h=[s,l,v];class g{static createWithNewSize(e,t){for(let r=0;r<h.length;r+=1)try{return h[r].createWithNewSize(e,t)}catch(a){}throw new Error("This file does not appear to contain Sega Saturn emulator save data")}static createFromSegaSaturnData(e){for(let a=0;a<h.length;a+=1)try{return h[a].createFromSegaSaturnData(e)}catch(t){}throw new Error("This file does not appear to contain Sega Saturn emulator save data")}static createFromSaveFiles(e,t){for(let r=0;r<h.length;r+=1)try{return h[r].createFromSaveFiles(e,t)}catch(a){}throw new Error("This file does not appear to contain Sega Saturn emulator save data")}}},6693:function(e,t,a){a.d(t,{Z:function(){return s}});var r=a(7885),n=a(3313);class s{static decompress(e){try{return n.Z.bufferToArrayBuffer(r.ZP.ungzip(e))}catch(t){throw new Error(`Could not decompress the data using gzip: ${t}`)}}static compress(e){try{return n.Z.bufferToArrayBuffer(r.ZP.gzip(e))}catch(t){throw new Error(`Could not compress the data using gzip: ${t}`)}}}},7327:function(e,t,a){function r(e){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},r(e)}function n(e,t){if("object"!==r(e)||null===e)return e;var a=e[Symbol.toPrimitive];if(void 0!==a){var n=a.call(e,t||"default");if("object"!==r(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}function s(e){var t=n(e,"string");return"symbol"===r(t)?t:String(t)}function i(e,t,a){return t=s(t),t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}a.d(t,{Z:function(){return i}})}}]);