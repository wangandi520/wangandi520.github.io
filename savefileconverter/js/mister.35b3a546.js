(self["webpackChunksave_file_converter"]=self["webpackChunksave_file_converter"]||[]).push([[53],{5482:function(t,e,r){"use strict";r.d(e,{Z:function(){return l}});var a=function(){var t=this,e=t._self._c;return e("div",[e("mq-layout",{attrs:{mq:this.horizontalLayout}},[e("b-form-group",{staticClass:"horizontal-arrangement",scopedSlots:t._u([{key:"default",fn:function({ariaDescribedby:r}){return[e("b-form-radio-group",{attrs:{options:t.optionsHorizontal,"aria-describedby":r,"button-variant":"outline-info",stacked:"",buttons:""},on:{change:function(e){return t.onChange(e)}},model:{value:t.conversionDirectionInternal,callback:function(e){t.conversionDirectionInternal=e},expression:"conversionDirectionInternal"}})]}}])})],1),e("mq-layout",{attrs:{mq:this.verticalLayout}},[e("b-form-group",{staticClass:"vertical-arrangement",scopedSlots:t._u([{key:"default",fn:function({ariaDescribedby:r}){return[e("b-form-radio-group",{attrs:{options:t.optionsVertical,"aria-describedby":r,"button-variant":"outline-info",buttons:""},on:{change:function(e){return t.onChange(e)}},model:{value:t.conversionDirectionInternal,callback:function(e){t.conversionDirectionInternal=e},expression:"conversionDirectionInternal"}})]}}])})],1)],1)},i=[],n={props:{horizontalLayout:Array,verticalLayout:Array,conversionDirection:String,disableDirection:{type:String,default:null}},data(){return{conversionDirectionInternal:this.conversionDirection,optionsHorizontal:[{html:'<i class="fa fa-arrow-circle-right fa-3x"></i>',value:"convertToRaw",disabled:"convertToRaw"===this.disableDirection},{html:'<i class="fa fa-arrow-circle-left fa-3x"></i>',value:"convertToFormat",disabled:"convertToFormat"===this.disableDirection}],optionsVertical:[{html:'<i class="fa fa-arrow-circle-down fa-3x"></i>',value:"convertToRaw",disabled:"convertToRaw"===this.disableDirection},{html:'<i class="fa fa-arrow-circle-up fa-3x"></i>',value:"convertToFormat",disabled:"convertToFormat"===this.disableDirection}]}},methods:{onChange(t){this.$emit("change",t)}}},s=n,o=r(1001),u=(0,o.Z)(s,a,i,!1,null,"d1ddfc22",null),l=u.exports},2405:function(t,e,r){"use strict";r.d(e,{Z:function(){return c}});var a=function(){var t=this,e=t._self._c;return e("b-row",{attrs:{"no-gutters":"","align-h":"start","align-v":"center"}},[e("b-col",{attrs:{cols:this.leaveRoomForHelpIcon?11:12,sm:"12"}},[e("div",[e("b-form-input",{attrs:{value:t.value,placeholder:"Output filename",disabled:this.disabled},on:{input:function(e){return t.$emit("input",e)}}}),null!==this.helpText?e("div",[e("help-button",{staticClass:"help-button",attrs:{"popover-text":this.helpText,id:this.id}})],1):t._e()],1)])],1)},i=[],n=r(7900),s={name:"OutputFilename",components:{HelpButton:n.Z},props:{value:{type:String,default:""},disabled:{type:Boolean,default:!1},id:{type:String,default:null},leaveRoomForHelpIcon:{type:Boolean,default:!1},helpText:{type:String,default:null}},data(){return{}}},o=s,u=r(1001),l=(0,u.Z)(o,a,i,!1,null,"25a53d2c",null),c=l.exports},5151:function(t,e,r){"use strict";r.d(e,{Z:function(){return f}});var a=function(){var t=this,e=t._self._c;return e("b-row",{attrs:{"no-gutters":"","align-h":"start","align-v":"center"}},[e("b-col",{attrs:{cols:"11",sm:"12"}},[e("div",[e("b-form-select",{attrs:{value:t.value,options:t.options},on:{input:function(e){return t.$emit("input",e)}}}),e("help-button",{staticClass:"help-button",attrs:{"popover-text":null!==this.overrideHelpText?this.overrideHelpText:"Some cartridges, flash carts, or emulators may not accept saves of a particular size for a particular game.           Try creating a test save with your cartridge, flash cart, or emulator to find what size it expects, then adjust the value here if necessary.",id:this.id}})],1)])],1)},i=[],n=r(7900),s=r(2137),o={name:"OutputFilesize",props:{value:{type:Number,default:null},id:{type:String,default:null},platform:{type:String,default:null},valuesToRemove:{type:Array,default:()=>[]},overrideHelpText:{type:String,default:null}},components:{HelpButton:n.Z},methods:{getDropdownText(t){let e=null;switch(t){case 64:e="0.06";break;case 128:e="0.1";break;case 256:e="0.25";break;default:e=(t/1024).toFixed(t<1024?1:0);break}return`${e}kB (${t} bytes)`}},computed:{options(){if(null===this.platform)return[];const t=s.Z[this.platform].filter((t=>this.valuesToRemove.indexOf(t)<0));return[{value:null,text:"Output file size",disabled:!0}].concat(t.map((t=>({value:t,text:this.getDropdownText(t)}))))}}},u=o,l=r(1001),c=(0,l.Z)(u,a,i,!1,null,"266011e0",null),f=c.exports},5981:function(t,e,r){"use strict";r.r(e),r.d(e,{default:function(){return yt}});var a=function(){var t=this,e=t._self._c;return e("div",{staticClass:"home"},[e("ConvertMister")],1)},i=[],n=function(){var t=this,e=t._self._c;return e("div",[e("b-container",[e("b-row",{attrs:{"no-gutters":"","align-h":"center","align-v":"start"}},[e("b-col",{attrs:{sm:"12",md:"5","align-self":"start"}},[e("b-row",{attrs:{"no-gutters":"","align-h":"center","align-v":"start"}},[e("b-col",{attrs:{cols:"12"}},[e("b-jumbotron",{attrs:{fluid:"","header-level":t._f("mq")(t.$mq,{xs:5,sm:5,md:5,lg:5,xl:4})},scopedSlots:t._u([{key:"header",fn:function(){return[t._v("MiSTer")]},proxy:!0}])})],1)],1),"convertToRaw"===this.conversionDirection?e("div",[e("input-file",{attrs:{errorMessage:this.errorMessage,placeholderText:"Choose a file to convert",leaveRoomForHelpIcon:!1},on:{load:function(e){return t.readMisterSaveData(e)}}}),e("mister-platform",{attrs:{id:"platform",disabled:!1},on:{input:function(e){return t.misterPlatformChanged()}},model:{value:t.misterPlatform,callback:function(e){t.misterPlatform=e},expression:"misterPlatform"}})],1):e("div",[e("output-filename",{attrs:{leaveRoomForHelpIcon:!1},model:{value:t.outputFilename,callback:function(e){t.outputFilename=e},expression:"outputFilename"}})],1)],1),e("b-col",{attrs:{sm:"12",md:"2",lg:"2",xl:"2","align-self":"start"}},[e("conversion-direction",{attrs:{horizontalLayout:["md","lg","xl"],verticalLayout:["xs","sm"],conversionDirection:this.conversionDirection},on:{change:function(e){return t.changeConversionDirection(e)}}})],1),e("b-col",{attrs:{sm:"12",md:"5","align-self":"start"}},[e("b-row",{attrs:{"no-gutters":"","align-h":"center","align-v":"start"}},[e("b-col",{attrs:{cols:"12"}},[e("b-jumbotron",{attrs:{fluid:"","header-level":t._f("mq")(t.$mq,{xs:5,sm:5,md:5,lg:5,xl:4})},scopedSlots:t._u([{key:"header",fn:function(){return[t._v("Emulator/Raw")]},proxy:!0}])})],1)],1),"convertToRaw"===this.conversionDirection?e("div",[e("output-filename",{attrs:{leaveRoomForHelpIcon:!1},model:{value:t.outputFilename,callback:function(e){t.outputFilename=e},expression:"outputFilename"}}),this.isSegaCd?e("div",[e("sega-cd-save-type-selector",{attrs:{value:this.segaCdSaveType,ramCartText:"Mister-SAT"===this.misterPlatform?"Backup cartridge":"RAM cartridge"},on:{change:function(e){return t.changeSegaCdSaveType(e)}}})],1):t._e(),this.displayOutputFileSize?e("div",[e("output-filesize",{attrs:{id:"output-filesize",platform:this.misterPlatformClass.adjustOutputSizesPlatform()},model:{value:t.outputFilesize,callback:function(e){t.outputFilesize=e},expression:"outputFilesize"}})],1):t._e()],1):e("div",[this.isSegaCd?e("div",[e("input-file",{ref:"inputFileSegaCdInternalMemory",attrs:{errorMessage:this.segaCdErrorMessage,placeholderText:"Choose an internal memory save file to convert",leaveRoomForHelpIcon:!1},on:{load:function(e){return t.readEmulatorSaveData(e,"rawInternalSaveArrayBuffer")}}}),e("input-file",{ref:"inputFileSegaCdRamCart",attrs:{errorMessage:this.segaCdErrorMessage,placeholderText:"Choose a RAM cartridge save file to convert",leaveRoomForHelpIcon:!1},on:{load:function(e){return t.readEmulatorSaveData(e,"rawCartSaveArrayBuffer")}}})],1):e("div",[e("input-file",{ref:"inputFileEmulator",attrs:{errorMessage:this.errorMessage,placeholderText:"Choose a file to convert",leaveRoomForHelpIcon:!1},on:{load:function(e){return t.readEmulatorSaveData(e)}}})],1),e("mister-platform",{attrs:{id:"platform",disabled:!1},on:{input:function(e){return t.misterPlatformChanged()}},model:{value:t.misterPlatform,callback:function(e){t.misterPlatform=e},expression:"misterPlatform"}})],1)],1)],1),e("b-row",{staticClass:"justify-content-md-center",attrs:{"align-h":"center"}},[e("b-col",{attrs:{cols:"auto",sm:"4",md:"3",lg:"2","align-self":"center"}},[e("b-button",{staticClass:"mister-convert-button",attrs:{variant:"success",block:"",disabled:!this.misterSaveData||!this.misterPlatform||!t.outputFilename},on:{click:function(e){return t.convertFile()}}},[t._v(" Convert! ")])],1)],1)],1)],1)},s=[],o=r(3162),u=r(3313),l=r(1044),c=r(2405),f=r(5151),m=r(5482),h=function(){var t=this,e=t._self._c;return e("div",[e("b-row",{attrs:{"no-gutters":"","align-h":"start","align-v":"center"}},[e("b-col",{attrs:{cols:"11",sm:"12"}},[e("div",[e("b-form-select",{attrs:{value:t.value,options:t.options,disabled:t.disabled},on:{input:function(e){return t.$emit("input",e)}}}),e("help-button",{staticClass:"help-button",attrs:{"popover-text":"Select the platform (NES, Super NES, Sega Genesis, etc.) that the save is for.",id:this.id}})],1)])],1)],1)},p=[],g=r(7900),y={name:"MisterPlatform",props:{value:{type:String,default:null},id:String,disabled:{type:Boolean,default:!1}},components:{HelpButton:g.Z},data(){return{options:[{value:null,text:"Choose platform",disabled:!0},{value:"Mister-NES",text:"NES"},{value:"Mister-SNES",text:"Super NES"},{value:"Mister-N64-Cart",text:"Nintendo 64 (cartridge)"},{value:"Mister-N64-Mempack",text:"Nintendo 64 (controller pak)"},{value:"Mister-GB",text:"Game Boy/Game Boy Color"},{value:"Mister-GBA",text:"Game Boy Advance"},{value:"Mister-GG",text:"Game Gear"},{value:"Mister-SMS",text:"Sega Master System"},{value:"Mister-MD",text:"Sega Genesis/Mega Drive"},{value:"Mister-MCD",text:"Sega CD/Mega CD"},{value:"Mister-SAT",text:"Sega Saturn"},{value:"Mister-PCE",text:"Turbografx-16/PC Engine"},{value:"Mister-PS1",text:"PlayStation 1"},{value:"Mister-WS",text:"WonderSwan/WonderSwan Color"}]}}},d=y,w=r(1001),v=(0,w.Z)(d,h,p,!1,null,"1ae17fd6",null),S=v.exports,A=r(8509),F=r(2976),E=r(7845);const b=32768,B=0;class Z{static getMisterFileExtension(){return"sav"}static getRawFileExtension(){return"srm"}static adjustOutputSizesPlatform(){return"nes"}static createWithNewSize(t,e){const r=E.Z.resizeRawSave(t.getRawArrayBuffer(),e);return Z.createFromRawData(r)}static createFromMisterData(t){return new Z(t,t)}static createFromRawData(t){return new Z(t,F.Z.padAtEndToMinimumSize(t,B,b))}constructor(t,e){this.rawArrayBuffer=t,this.misterArrayBuffer=e}getRawArrayBuffer(){return this.rawArrayBuffer}getMisterArrayBuffer(){return this.misterArrayBuffer}}class C{static getMisterFileExtension(){return"sav"}static getRawFileExtension(){return"srm"}static adjustOutputSizesPlatform(){return"snes"}static createWithNewSize(t,e){const r=E.Z.resizeRawSave(t.getRawArrayBuffer(),e);return C.createFromRawData(r)}static createFromMisterData(t){return new C(t,t)}static createFromRawData(t){return new C(t,t)}constructor(t,e){this.rawArrayBuffer=t,this.misterArrayBuffer=e}getRawArrayBuffer(){return this.rawArrayBuffer}getMisterArrayBuffer(){return this.misterArrayBuffer}}var R=r(9698);class M{static getMisterFileExtension(t){return R.Z.getFileExtension(t)}static getRawFileExtension(t){return R.Z.getFileExtension(t)}static adjustOutputSizesPlatform(){return"n64"}static createWithNewSize(t,e){const r=E.Z.resizeRawSave(t.getRawArrayBuffer(),e);return M.createFromRawData(r)}static createFromMisterData(t){return new M(t,t)}static createFromRawData(t){return new M(t,t)}constructor(t,e){this.rawArrayBuffer=t,this.misterArrayBuffer=e}getRawArrayBuffer(){return this.rawArrayBuffer}getMisterArrayBuffer(){return this.misterArrayBuffer}}var D=r(1945);class x{static getMisterFileExtension(){return"cpk"}static getRawFileExtension(){return"mpk"}static adjustOutputSizesPlatform(){return null}static createWithNewSize(t){return t}static createFromMisterData(t){const e=D.Z.createFromN64MempackData(t);return new x(e.getArrayBuffer(),e.getArrayBuffer())}static createFromRawData(t){const e=D.Z.createFromN64MempackData(t);return new x(e.getArrayBuffer(),e.getArrayBuffer())}constructor(t,e){this.rawArrayBuffer=t,this.misterArrayBuffer=e}getRawArrayBuffer(){return this.rawArrayBuffer}getMisterArrayBuffer(){return this.misterArrayBuffer}}class T{static getMisterFileExtension(){return"sav"}static getRawFileExtension(){return"srm"}static adjustOutputSizesPlatform(){return"gb"}static createWithNewSize(t,e){const r=E.Z.resizeRawSave(t.getRawArrayBuffer(),e);return T.createFromRawData(r)}static createFromMisterData(t){return new T(t,t)}static createFromRawData(t){return new T(t,t)}constructor(t,e){this.rawArrayBuffer=t,this.misterArrayBuffer=e}getRawArrayBuffer(){return this.rawArrayBuffer}getMisterArrayBuffer(){return this.misterArrayBuffer}}var P=r(7978);const _=8192,z=0;class I{static getMisterFileExtension(){return"sav"}static getRawFileExtension(){return"srm"}static adjustOutputSizesPlatform(){return"gba"}static createWithNewSize(t,e){const r=E.Z.resizeRawSave(t.getRawArrayBuffer(),e);return I.createFromRawData(r)}static createFromMisterData(t){let e=t;const r=!P.Z.isPowerOf2(t.byteLength);return r&&(e=F.Z.removePaddingFromEnd(t,t.byteLength-P.Z.getNextSmallestPowerOf2(t.byteLength))),new I(e,t)}static createFromRawData(t){return new I(t,F.Z.padAtEndToMinimumSize(t,z,_))}constructor(t,e){this.rawArrayBuffer=t,this.misterArrayBuffer=e}getRawArrayBuffer(){return this.rawArrayBuffer}getMisterArrayBuffer(){return this.misterArrayBuffer}}class N{static getMisterFileExtension(){return"sav"}static getRawFileExtension(){return"srm"}static adjustOutputSizesPlatform(){return"gamegear"}static createWithNewSize(t,e){const r=E.Z.resizeRawSave(t.getRawArrayBuffer(),e);return N.createFromRawData(r)}static createFromMisterData(t){return new N(t,t)}static createFromRawData(t){return new N(t,t)}constructor(t,e){this.rawArrayBuffer=t,this.misterArrayBuffer=e}getRawArrayBuffer(){return this.rawArrayBuffer}getMisterArrayBuffer(){return this.misterArrayBuffer}}const k=32768,L=0;class O{static getMisterFileExtension(){return"sav"}static getRawFileExtension(){return"sav"}static adjustOutputSizesPlatform(){return"sms"}static createWithNewSize(t,e){const r=E.Z.resizeRawSave(t.getRawArrayBuffer(),e);return O.createFromRawData(r)}static createFromMisterData(t){return new O(t,t)}static createFromRawData(t){return new O(t,F.Z.padAtEndToMinimumSize(t,L,k))}constructor(t,e){this.rawArrayBuffer=t,this.misterArrayBuffer=e}getRawArrayBuffer(){return this.rawArrayBuffer}getMisterArrayBuffer(){return this.misterArrayBuffer}}var U=r(4230);const $=65536,V=255;class j{static getMisterFileExtension(){return"sav"}static getRawFileExtension(){return"srm"}static adjustOutputSizesPlatform(){return"genesis"}static createWithNewSize(t,e){const r=E.Z.resizeRawSave(t.getRawArrayBuffer(),e);return j.createFromRawData(r)}static createFromMisterData(t){let e=t;const r=F.Z.getPadFromEndValueAndCount(t);if(e=F.Z.removePaddingFromEnd(t,r.count),U.Z.isEepromSave(e))return new j(e,e);const a=U.Z.byteExpand(e,0);return new j(a,t)}static createFromRawData(t){let e=t;return U.Z.isByteExpanded(t)&&(e=U.Z.byteCollapse(t)),new j(t,F.Z.padAtEndToMinimumSize(e,V,$))}constructor(t,e){this.rawArrayBuffer=t,this.misterArrayBuffer=e}getRawArrayBuffer(){return this.rawArrayBuffer}getMisterArrayBuffer(){return this.misterArrayBuffer}}var W=r(7327),G=r(4762);class H{static getMisterFileExtension(){return"sav"}static getRawFileExtension(){return"brm"}static adjustOutputSizesPlatform(){return"segacd"}static createWithNewSize(t,e){const r=G.Z.resize(t.rawCartSaveArrayBuffer,e);return new H(t.rawInternalSaveArrayBuffer,r,t.misterArrayBuffer)}static createFromMisterData(t){if(t.byteLength===G.Z.INTERNAL_SAVE_SIZE+H.RAM_CART_SIZE){let e=t.slice(0,G.Z.INTERNAL_SAVE_SIZE),r=t.slice(G.Z.INTERNAL_SAVE_SIZE,G.Z.INTERNAL_SAVE_SIZE+H.RAM_CART_SIZE);return e=G.Z.isCorrectlyFormatted(e)?G.Z.truncateToActualSize(e):G.Z.makeEmptySave(G.Z.INTERNAL_SAVE_SIZE),r=G.Z.isCorrectlyFormatted(r)?G.Z.truncateToActualSize(r):G.Z.makeEmptySave(H.RAM_CART_SIZE),new H(e,r,t)}return new H(G.Z.truncateToActualSize(t),G.Z.makeEmptySave(H.RAM_CART_SIZE),t)}static createFromRawData({rawInternalSaveArrayBuffer:t=null,rawCartSaveArrayBuffer:e=null}){let r=null,a=null,i=null;if(null!==t&&(r=G.Z.truncateToActualSize(t),r.byteLength!==G.Z.INTERNAL_SAVE_SIZE))throw new Error(`Internal save RAM is not the correct size. Must be ${G.Z.INTERNAL_SAVE_SIZE} bytes`);if(null!==e&&(a=G.Z.truncateToActualSize(e),i=G.Z.resize(a,H.RAM_CART_SIZE)),null!==r)return null!==i?new H(r,a,u.Z.concatArrayBuffers([r,i])):new H(r,G.Z.makeEmptySave(H.RAM_CART_SIZE),r);const n=G.Z.makeEmptySave(G.Z.INTERNAL_SAVE_SIZE);return null!==i?new H(n,a,u.Z.concatArrayBuffers([n,i])):new H(n,G.Z.makeEmptySave(H.RAM_CART_SIZE),n)}constructor(t,e,r){this.rawInternalSaveArrayBuffer=t,this.rawCartSaveArrayBuffer=e,this.misterArrayBuffer=r}getRawArrayBuffer(t=H.INTERNAL_MEMORY){switch(t){case H.INTERNAL_MEMORY:return this.rawInternalSaveArrayBuffer;case H.RAM_CART:return this.rawCartSaveArrayBuffer;default:throw new Error(`Unknown index: ${t}`)}}getMisterArrayBuffer(){return this.misterArrayBuffer}}(0,W.Z)(H,"INTERNAL_MEMORY","internal-memory"),(0,W.Z)(H,"RAM_CART","ram-cart"),(0,W.Z)(H,"RAM_CART_SIZE",524288);var Y=r(1165),K=r(1731);const q=2*Y.Z.INTERNAL_SAVE_SIZE,J=2*Y.Z.CARTRIDGE_SAVE_SIZE,X=255;class Q{static getMisterFileExtension(){return"sav"}static getRawFileExtension(t){return"internal-memory"===t?"bkr":"bcr"}static adjustOutputSizesPlatform(){return null}static createWithNewSize(){}static createFromMisterData(t){let e=t.slice(0,q),r=U.Z.byteExpand(Y.Z.createEmptySave(Y.Z.CARTRIDGE_BLOCK_SIZE),X);if(t.byteLength===q+J&&(r=t.slice(q,q+J)),e=U.Z.byteCollapse(e),r=U.Z.byteCollapse(r),!Y.Z.isCorrectlyFormatted(e)||!Y.Z.isCorrectlyFormatted(r))throw new Error("This does not appear to be a MiSTer Sega Saturn save file");return new Q(e,r,t)}static createFromRawData({rawInternalSaveArrayBuffer:t=null,rawCartSaveArrayBuffer:e=null}){let r=null,a=null;if(null!==t&&(r=K.Z.createFromSegaSaturnData(t).getArrayBuffer(),r.byteLength!==Y.Z.INTERNAL_SAVE_SIZE))throw new Error("This does not appear to be an internal Sega Saturn save file");if(null!==e&&(a=K.Z.createFromSegaSaturnData(e).getArrayBuffer(),a.byteLength!==Y.Z.CARTRIDGE_SAVE_SIZE))throw new Error("This does not appear to be a Sega Saturn cartridge save file");const i=Y.Z.createEmptySave(Y.Z.INTERNAL_BLOCK_SIZE),n=Y.Z.createEmptySave(Y.Z.CARTRIDGE_BLOCK_SIZE);return null!==r?null!==a?new Q(r,a,U.Z.byteExpand(u.Z.concatArrayBuffers([r,a]),X)):new Q(r,n,U.Z.byteExpand(r,X)):null!==a?new Q(i,a,U.Z.byteExpand(u.Z.concatArrayBuffers([i,a]),X)):new Q(i,n,U.Z.byteExpand(i,X))}constructor(t,e,r){this.rawInternalSaveArrayBuffer=t,this.rawCartSaveArrayBuffer=e,this.misterArrayBuffer=r}getRawArrayBuffer(t=Q.INTERNAL_MEMORY){switch(t){case Q.INTERNAL_MEMORY:return this.rawInternalSaveArrayBuffer;case Q.RAM_CART:return this.rawCartSaveArrayBuffer;default:throw new Error(`Unknown index: ${t}`)}}getMisterArrayBuffer(){return this.misterArrayBuffer}}(0,W.Z)(Q,"INTERNAL_MEMORY","internal-memory"),(0,W.Z)(Q,"RAM_CART","ram-cart");var tt=r(1492);class et{static getMisterFileExtension(){return"sav"}static getRawFileExtension(){return"sav"}static adjustOutputSizesPlatform(){return null}static createWithNewSize(t){return t}static createFromMisterData(t){return tt.Z.verifyPcEngineData(t),new et(t,t)}static createFromRawData(t){return tt.Z.verifyPcEngineData(t),new et(t,t)}constructor(t,e){this.rawArrayBuffer=t,this.misterArrayBuffer=e}getRawArrayBuffer(){return this.rawArrayBuffer}getMisterArrayBuffer(){return this.misterArrayBuffer}}var rt=r(5847);class at{static getMisterFileExtension(){return"mcd"}static getRawFileExtension(){return"mcr"}static adjustOutputSizesPlatform(){return null}static createWithNewSize(t){return t}static createFromMisterData(t){const e=rt.Z.createFromPs1MemcardData(t);return new at(e.getArrayBuffer(),e.getArrayBuffer())}static createFromRawData(t){const e=rt.Z.createFromPs1MemcardData(t);return new at(e.getArrayBuffer(),e.getArrayBuffer())}constructor(t,e){this.rawArrayBuffer=t,this.misterArrayBuffer=e}getRawArrayBuffer(){return this.rawArrayBuffer}getMisterArrayBuffer(){return this.misterArrayBuffer}}const it=512,nt=0;function st(t){const e={value:nt,count:it};return F.Z.addPaddingToEnd(t,e)}function ot(t){if(t.byteLength<=it||!P.Z.isPowerOf2(t.byteLength-it))throw new Error("File does not appear to be in the MiSTer WonderSwan format");return F.Z.removePaddingFromEnd(t,it)}class ut{static getMisterFileExtension(){return"sav"}static getRawFileExtension(){return"sav"}static adjustOutputSizesPlatform(){return null}static createWithNewSize(t){return t}static createFromMisterData(t){return new ut(ot(t),t)}static createFromRawData(t){return new ut(t,st(t))}constructor(t,e){this.rawArrayBuffer=t,this.misterArrayBuffer=e}getRawArrayBuffer(){return this.rawArrayBuffer}getMisterArrayBuffer(){return this.misterArrayBuffer}}var lt={name:"ConvertMister",data(){return{misterSaveData:null,misterPlatform:null,misterPlatformPrevious:null,misterPlatformClass:null,errorMessage:null,segaCdErrorMessage:null,outputFilename:null,outputFilesize:null,conversionDirection:"convertToRaw",inputArrayBuffer:null,inputFilename:null,inputFileType:null,inputSegaCd:{},segaCdSaveType:"internal-memory"}},components:{ConversionDirection:m.Z,InputFile:l.Z,OutputFilename:c.Z,OutputFilesize:f.Z,MisterPlatform:S,SegaCdSaveTypeSelector:A.Z},computed:{isSegaCd:{get(){return"Mister-MCD"===this.misterPlatform||"Mister-SAT"===this.misterPlatform}},displayOutputFileSize:{get(){return null!==this.misterPlatformClass&&null!==this.misterPlatformClass.adjustOutputSizesPlatform()&&(!this.isSegaCd||"ram-cart"===this.segaCdSaveType)}}},methods:{changeConversionDirection(t){this.conversionDirection=t,this.misterSaveData=null,this.misterPlatform=null,this.misterPlatformPrevious=null,this.misterPlatformClass=null,this.errorMessage=null,this.segaCdErrorMessage=null,this.outputFilename=null,this.outputFilesize=null,this.inputArrayBuffer=null,this.inputFilename=null,this.inputFileType=null,this.inputSegaCd={},this.segaCdSaveType="internal-memory"},changeSegaCdSaveType(t){this.segaCdSaveType=t,null!==this.inputFilename&&null!==this.misterPlatformClass&&(this.outputFilename=this.getSegaCdRawFileName())},getSegaCdRawFileName(){const t="internal-memory"===this.segaCdSaveType?" - internal memory":" - cartridge";return`${u.Z.removeFilenameExtension(this.inputFilename)}${t}.${this.misterPlatformClass.getRawFileExtension(this.segaCdSaveType)}`},misterPlatformChanged(){if(null!==this.misterPlatform)switch(this.misterPlatform){case"Mister-NES":this.misterPlatformClass=Z;break;case"Mister-SNES":this.misterPlatformClass=C;break;case"Mister-N64-Cart":this.misterPlatformClass=M;break;case"Mister-N64-Mempack":this.misterPlatformClass=x;break;case"Mister-GB":this.misterPlatformClass=T;break;case"Mister-GBA":this.misterPlatformClass=I;break;case"Mister-GG":this.misterPlatformClass=N;break;case"Mister-SMS":this.misterPlatformClass=O;break;case"Mister-MD":this.misterPlatformClass=j;break;case"Mister-MCD":this.misterPlatformClass=H;break;case"Mister-SAT":this.misterPlatformClass=Q;break;case"Mister-PCE":this.misterPlatformClass=et;break;case"Mister-PS1":this.misterPlatformClass=at;break;case"Mister-WS":this.misterPlatformClass=ut;break;default:this.misterPlatformClass=null;break}else this.misterPlatformClass=null;this.misterPlatform!==this.misterPlatformPrevious&&"convertToRaw"!==this.conversionDirection&&(this.inputFileType=null,this.inputArrayBuffer=null,this.inputFilename=null,this.inputSegaCd={},this.$refs.inputFileSegaCdInternalMemory&&this.$refs.inputFileSegaCdInternalMemory.reset(),this.$refs.inputFileSegaCdRamCart&&this.$refs.inputFileSegaCdRamCart.reset(),this.$refs.inputFileEmulator&&this.$refs.inputFileEmulator.reset()),this.misterPlatformPrevious=this.misterPlatform,this.updateMisterSaveData()},updateMisterSaveData(t){if(this.errorMessage=null,this.segaCdErrorMessage=null,this.outputFilesize=null,null!==this.misterPlatformClass&&null!==this.inputArrayBuffer&&null!==this.inputFilename&&null!==this.inputFileType)try{"mister"===this.inputFileType?(this.misterSaveData=this.misterPlatformClass.createFromMisterData(this.inputArrayBuffer),this.isSegaCd?this.outputFilename=this.getSegaCdRawFileName():this.outputFilename=u.Z.changeFilenameExtension(this.inputFilename,this.misterPlatformClass.getRawFileExtension(this.inputArrayBuffer))):(this.isSegaCd?this.misterSaveData=this.misterPlatformClass.createFromRawData(this.inputSegaCd):this.misterSaveData=this.misterPlatformClass.createFromRawData(this.inputArrayBuffer),this.outputFilename=u.Z.changeFilenameExtension(this.inputFilename,this.misterPlatformClass.getMisterFileExtension(this.inputArrayBuffer))),this.isSegaCd?this.outputFilesize=this.misterSaveData.getRawArrayBuffer(H.RAM_CART).byteLength:this.outputFilesize=this.misterSaveData.getRawArrayBuffer().byteLength}catch(e){null===t?this.errorMessage="This file does not seem to be in the correct format":this.segaCdErrorMessage="At least one of these files does not seem to be in the correct format",this.misterSaveData=null}else this.misterSaveData=null,this.outputFilename=null,this.outputFilesize=null,this.segaCdSaveType="internal-memory"},readMisterSaveData(t){this.inputFileType="mister",this.inputArrayBuffer=t.arrayBuffer,this.inputFilename=t.filename,this.inputSegaCd={},this.updateMisterSaveData()},readEmulatorSaveData(t,e=null){this.inputFileType="raw",this.inputArrayBuffer=t.arrayBuffer,this.inputFilename=t.filename,null!==e?this.inputSegaCd[e]=t.arrayBuffer:this.inputSegaCd={},this.updateMisterSaveData(e)},convertFile(){let t=this.misterSaveData,e=!1;e=this.isSegaCd?this.misterSaveData.getRawArrayBuffer(H.RAM_CART).byteLength!==this.outputFilesize:this.misterSaveData.getRawArrayBuffer().byteLength!==this.outputFilesize,e&&(t=this.misterPlatformClass.createWithNewSize(this.misterSaveData,this.outputFilesize));let r=null;r="convertToRaw"===this.conversionDirection?this.isSegaCd?t.getRawArrayBuffer(this.segaCdSaveType):t.getRawArrayBuffer():t.getMisterArrayBuffer();const a=new Blob([r],{type:"application/octet-stream"});(0,o.saveAs)(a,this.outputFilename)}}},ct=lt,ft=(0,w.Z)(ct,n,s,!1,null,"c87bf284",null),mt=ft.exports,ht={name:"MisterView",components:{ConvertMister:mt}},pt=ht,gt=(0,w.Z)(pt,a,i,!1,null,null,null),yt=gt.exports},1318:function(t,e,r){var a=r(5656),i=r(1400),n=r(6244),s=function(t){return function(e,r,s){var o,u=a(e),l=n(u),c=i(s,l);if(t&&r!=r){while(l>c)if(o=u[c++],o!=o)return!0}else for(;l>c;c++)if((t||c in u)&&u[c]===r)return t||c||0;return!t&&-1}};t.exports={includes:s(!0),indexOf:s(!1)}},3658:function(t,e,r){"use strict";var a=r(9781),i=r(3157),n=TypeError,s=Object.getOwnPropertyDescriptor,o=a&&!function(){if(void 0!==this)return!0;try{Object.defineProperty([],"length",{writable:!1}).length=1}catch(t){return t instanceof TypeError}}();t.exports=o?function(t,e){if(i(t)&&!s(t,"length").writable)throw n("Cannot set read only .length");return t.length=e}:function(t,e){return t.length=e}},2128:function(t,e,r){var a=r(2597),i=r(3887),n=r(1236),s=r(3070);t.exports=function(t,e,r){for(var o=i(e),u=s.f,l=n.f,c=0;c<o.length;c++){var f=o[c];a(t,f)||r&&a(r,f)||u(t,f,l(e,f))}}},7207:function(t){var e=TypeError,r=9007199254740991;t.exports=function(t){if(t>r)throw e("Maximum allowed index exceeded");return t}},748:function(t){t.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},2109:function(t,e,r){var a=r(7854),i=r(1236).f,n=r(8880),s=r(8052),o=r(3072),u=r(2128),l=r(4705);t.exports=function(t,e){var r,c,f,m,h,p,g=t.target,y=t.global,d=t.stat;if(c=y?a:d?a[g]||o(g,{}):(a[g]||{}).prototype,c)for(f in e){if(h=e[f],t.dontCallGetSet?(p=i(c,f),m=p&&p.value):m=c[f],r=l(y?f:g+(d?".":"#")+f,t.forced),!r&&void 0!==m){if(typeof h==typeof m)continue;u(h,m)}(t.sham||m&&m.sham)&&n(h,"sham",!0),s(c,f,h,t)}}},3157:function(t,e,r){var a=r(4326);t.exports=Array.isArray||function(t){return"Array"==a(t)}},4705:function(t,e,r){var a=r(7293),i=r(614),n=/#|\.prototype\./,s=function(t,e){var r=u[o(t)];return r==c||r!=l&&(i(e)?a(e):!!e)},o=s.normalize=function(t){return String(t).replace(n,".").toLowerCase()},u=s.data={},l=s.NATIVE="N",c=s.POLYFILL="P";t.exports=s},1236:function(t,e,r){var a=r(9781),i=r(6916),n=r(5296),s=r(9114),o=r(5656),u=r(4948),l=r(2597),c=r(4664),f=Object.getOwnPropertyDescriptor;e.f=a?f:function(t,e){if(t=o(t),e=u(e),c)try{return f(t,e)}catch(r){}if(l(t,e))return s(!i(n.f,t,e),t[e])}},8006:function(t,e,r){var a=r(6324),i=r(748),n=i.concat("length","prototype");e.f=Object.getOwnPropertyNames||function(t){return a(t,n)}},5181:function(t,e){e.f=Object.getOwnPropertySymbols},6324:function(t,e,r){var a=r(1702),i=r(2597),n=r(5656),s=r(1318).indexOf,o=r(3501),u=a([].push);t.exports=function(t,e){var r,a=n(t),l=0,c=[];for(r in a)!i(o,r)&&i(a,r)&&u(c,r);while(e.length>l)i(a,r=e[l++])&&(~s(c,r)||u(c,r));return c}},5296:function(t,e){"use strict";var r={}.propertyIsEnumerable,a=Object.getOwnPropertyDescriptor,i=a&&!r.call({1:2},1);e.f=i?function(t){var e=a(this,t);return!!e&&e.enumerable}:r},3887:function(t,e,r){var a=r(5005),i=r(1702),n=r(8006),s=r(5181),o=r(9670),u=i([].concat);t.exports=a("Reflect","ownKeys")||function(t){var e=n.f(o(t)),r=s.f;return r?u(e,r(t)):e}},1400:function(t,e,r){var a=r(9303),i=Math.max,n=Math.min;t.exports=function(t,e){var r=a(t);return r<0?i(r+e,0):n(r,e)}},5656:function(t,e,r){var a=r(8361),i=r(4488);t.exports=function(t){return a(i(t))}},7658:function(t,e,r){"use strict";var a=r(2109),i=r(7908),n=r(6244),s=r(3658),o=r(7207),u=r(7293),l=u((function(){return 4294967297!==[].push.call({length:4294967296},1)})),c=function(){try{Object.defineProperty([],"length",{writable:!1}).push()}catch(t){return t instanceof TypeError}},f=l||!c();a({target:"Array",proto:!0,arity:1,forced:f},{push:function(t){var e=i(this),r=n(e),a=arguments.length;o(r+a);for(var u=0;u<a;u++)e[r]=arguments[u],r++;return s(e,r),r}})},5847:function(t,e,r){"use strict";r.d(e,{Z:function(){return O}});var a=r(7327),i=(r(3408),r(4590),r(3462),r(3767),r(8585),r(8696),r(7658),r(3313));const n="US-ASCII",s=15,o=8192,u=128,l=!0,c="MC",f=0,m=8,h=65535,p=10,g=20,y="US-ASCII",d=4,w=160,v=81,S=82,A=83,F=255,E="SC",b=4,B=64,Z="shift-jis";function C(t){const e=t.charAt(0);if("B"===e){const e=t.charAt(1);if("I"===e)return"Japan";if("A"===e)return"North America";if("E"===e)return"Europe"}return"Unknown region"}function R(t){return t.replace(/[\uff01-\uff5e]/g,(t=>String.fromCharCode(t.charCodeAt(0)-65248))).replace(/\u3000/g," ")}function M(t,e){const r=u+e*u;return t.slice(r,r+u)}function D(t,e){const r=o*e;return t.slice(r,r+o)}function x(t){if(i.Z.checkMagic(t.rawData,0,E,n),t.rawData.byteLength<=0)throw new Error(`File ${t.filename} does not contain any data`);if(t.rawData.byteLength%o!==0)throw new Error(`File ${t.filename} size must be a multiple of ${o} bytes`)}function T(t){const e=new Uint8Array(t);return e.reduce(((t,e)=>t^e))}function P(t,e){return e.encode(t).slice(0,g)}function _(){const t=new ArrayBuffer(u),e=new Uint8Array(t);return e.fill(0),e[0]=c.charCodeAt(0),e[1]=c.charCodeAt(1),e[u-1]=T(t),t}function z(){const t=new ArrayBuffer(u),e=new Uint8Array(t),r=new DataView(t);return e.fill(0),r.setUint8(f,w),r.setUint16(m,h,l),r.setUint8(u-1,T(t)),t}function I(){return new ArrayBuffer(o)}function N(){const t=new ArrayBuffer(u),e=new Uint8Array(t),r=new DataView(t);return e.fill(0),r.setUint8(f+0,F),r.setUint8(f+1,F),r.setUint8(f+2,F),r.setUint8(f+3,F),r.setUint16(m,h,l),t}function k(){const t=new ArrayBuffer(u),e=new Uint8Array(t);return e.fill(0),t}function L(t,e,r){const a=t.rawData.byteLength/o;let i=!1,n=0;a>=2&&(i=!0,n=a-2);const s=[];let c=e;{const e=k(),i=new Uint8Array(e),n=new DataView(e),o=P(t.filename,r);n.setUint8(f,v),n.setUint32(d,t.rawData.byteLength,l),n.setUint16(m,a>1?c+1:h,l),i.set(o,p),n.setUint8(u-1,T(e)),s.push(e)}for(let o=0;o<n;o+=1){c+=1;const t=k(),e=new DataView(t);e.setUint8(f,S),e.setUint16(m,c+1,l),e.setUint8(u-1,T(t)),s.push(t)}if(i){const t=k(),e=new DataView(t);e.setUint8(f,A),e.setUint16(m,h,l),e.setUint8(u-1,T(t)),s.push(t)}const g=[];for(let u=0;u<a;u+=1)g.push(t.rawData.slice(u*o,(u+1)*o));return{directoryFrames:s,saveBlocks:g}}class O{static encodeFilename(t,e){return P(t,e)}static createFromPs1MemcardData(t){return new O(t)}static createFromSaveFiles(t){t.forEach((t=>x(t)));const e=t.reduce(((t,e)=>t+e.filesize));if(e>s*o)throw new Error(`Total size of files is ${e} bytes (${e/o} blocks) but max size is ${s*o} bytes (${s} blocks)`);const r=[],a=[],n=new TextEncoder(y);r.push(_()),t.forEach((t=>{const e=L(t,r.length-1,n);r.push(...e.directoryFrames),a.push(...e.saveBlocks)}));while(r.length<s+1)r.push(z()),a.push(I());while(r.length<o/u)r.push(N());const l=i.Z.concatArrayBuffers(r);a.unshift(l);const c=i.Z.concatArrayBuffers(a);return new O(c)}constructor(t){this.arrayBuffer=t;const e=t.slice(0,o),r=t.slice(o,o*(s+1));i.Z.checkMagic(e,0,c,n);const a=new TextDecoder(y),u=new TextDecoder(Z);this.saveFiles=[];for(let o=0;o<s;o+=1){let t=M(e,o),s=new DataView(t);const c=s.getUint8(f);if((240&c)!==w&&c!==F&&c===v){const c=i.Z.trimNull(a.decode(t.slice(p,p+g))),f=C(c),y=s.getUint32(d,l),w=[D(r,o)];i.Z.checkMagic(w[0],0,E,n);const v=R(i.Z.trimNull(u.decode(w[0].slice(b,b+B))));let S=s.getUint16(m,l);while(S!==h)w.push(D(r,S)),t=M(e,S),s=new DataView(t),S=s.getUint16(m,l);const A=i.Z.concatArrayBuffers(w);if(A.byteLength!==y)throw new Error(`Save file appears to be corrupted: expected file ${v} to be ${y} bytes, but was actually ${A.byteLength} bytes`);this.saveFiles.push({startingBlock:o,filename:c,regionName:f,description:v,rawData:A})}}}getDirectoryFrame(t){const e=this.arrayBuffer.slice(0,o);return M(e,t)}getSaveFiles(){return this.saveFiles}getArrayBuffer(){return this.arrayBuffer}}(0,a.Z)(O,"NUM_BLOCKS",s),(0,a.Z)(O,"FRAME_SIZE",u),(0,a.Z)(O,"TOTAL_SIZE",(s+1)*o),(0,a.Z)(O,"DIRECTORY_FRAME_AVAILABLE_OFFSET",f),(0,a.Z)(O,"DIRECTORY_FRAME_NEXT_BLOCK_OFFSET",m),(0,a.Z)(O,"DIRECTORY_FRAME_FIRST_LINK_BLOCK",v)},2137:function(t,e,r){"use strict";r(7658);const a={nes:[512,1024,2048,4096,8192,16384,32768,65536,131072],snes:[512,1024,2048,4096,8192,16384,32768,65536,131072],n64:[512,2048,32768,131072,786432],gb:[512,1024,2048,4096,8192,16384,32768,65536],gba:[512,8192,32768,65536,131072],gamegear:[512,1024,2048,4096,8192,16384,32768,65536],sms:[512,1024,2048,4096,8192,16384,32768,65536],genesis:[64,128,256,512,1024,2048,4096,8192,16384,32768,65536,131072],segacd:[8192,16384,32768,65536,131072,262144,524288]},i=Object.keys(a).reduce(((t,e)=>(t.push(...a[e]),t)),[]),n=[...new Set(i)].sort(((t,e)=>t-e));a.all=n,e["Z"]=a},1731:function(t,e,r){"use strict";r.d(e,{Z:function(){return p}});var a=r(1165),i=r(6693);class n{static createWithNewSize(){}static createFromSegaSaturnData(t){let e=null;try{e=i.Z.decompress(t)}catch(r){e=t}return a.Z.createFromSegaSaturnData(e)}static createFromSaveFiles(t,e){const r=a.Z.createFromSaveFiles(t,e);return e===a.Z.CARTRIDGE_BLOCK_SIZE?new a.Z(i.Z.compress(r.getArrayBuffer()),r.getSaveFiles(),r.getVolumeInfo()):r}}var s=r(4230);const o=255;class u{static createWithNewSize(){}static createFromSegaSaturnData(t){if(!s.Z.isByteExpanded(t))throw new Error("This does not appear to be a yabause save file");const e=s.Z.byteCollapse(t);return a.Z.createFromSegaSaturnData(e)}static createFromSaveFiles(t,e){const r=a.Z.createFromSaveFiles(t,e);return new a.Z(s.Z.byteExpand(r.getArrayBuffer(),o),r.getSaveFiles(),r.getVolumeInfo())}}const l=255,c=64,f=8388608;class m{static createWithNewSize(){}static createFromSegaSaturnData(t){if(!s.Z.isByteExpanded(t))throw new Error("This does not appear to be a yaba sanshiro save file");const e=s.Z.byteCollapse(t);return a.Z.createFromSegaSaturnData(e,c)}static createFromSaveFiles(t){const e=a.Z.createFromSaveFiles(t,c,f/2);return new a.Z(s.Z.byteExpand(e.getArrayBuffer(),l),e.getSaveFiles(),e.getVolumeInfo())}}const h=[n,u,m];class p{static createWithNewSize(t,e){for(let a=0;a<h.length;a+=1)try{return h[a].createWithNewSize(t,e)}catch(r){}throw new Error("This file does not appear to contain Sega Saturn emulator save data")}static createFromSegaSaturnData(t){for(let r=0;r<h.length;r+=1)try{return h[r].createFromSegaSaturnData(t)}catch(e){}throw new Error("This file does not appear to contain Sega Saturn emulator save data")}static createFromSaveFiles(t,e){for(let a=0;a<h.length;a+=1)try{return h[a].createFromSaveFiles(t,e)}catch(r){}throw new Error("This file does not appear to contain Sega Saturn emulator save data")}}},6693:function(t,e,r){"use strict";r.d(e,{Z:function(){return n}});var a=r(7885),i=r(3313);class n{static decompress(t){try{return i.Z.bufferToArrayBuffer(a.ZP.ungzip(t))}catch(e){throw new Error(`Could not decompress the data using gzip: ${e}`)}}static compress(t){try{return i.Z.bufferToArrayBuffer(a.ZP.gzip(t))}catch(e){throw new Error(`Could not compress the data using gzip: ${e}`)}}}},1492:function(t,e,r){"use strict";r.d(e,{Z:function(){return u}});var a=r(3313);const i=2048,n="HUBM",s="US-ASCII",o=0;class u{static verifyPcEngineData(t){if(t.byteLength!==i)throw new Error(`File is the incorrect size: expected ${i} bytes but found ${t.byteLength} bytes`);return a.Z.checkMagic(t,o,n,s)}}},7845:function(t,e,r){"use strict";r.d(e,{Z:function(){return a}});r(3408),r(4590),r(3462),r(3767),r(8585),r(8696);class a{static resizeRawSave(t,e,r=0){let a=t;if(e<t.byteLength)a=t.slice(0,e);else if(e>t.byteLength){a=new ArrayBuffer(e);const i=new Uint8Array(a),n=new Uint8Array(t);i.fill(r),i.set(n,0)}return a}static getEraseCartridgeSave(t){const e=new ArrayBuffer(t.byteLength),r=new Uint8Array(e);return r.fill(0),e}}},4762:function(t,e,r){"use strict";r.d(e,{Z:function(){return v}});var a=r(7327),i=(r(3408),r(4590),r(3462),r(3767),r(8585),r(8696),r(2137)),n=r(3313);const s=!1,o=[95,95,95,95,95,95,95,95,95,95,95,0,0,0,0,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,83,69,71,65,95,67,68,95,82,79,77,0,1,0,0,0,82,65,77,95,67,65,82,84,82,73,68,71,69,95,95,95],u=32,l=4,c=16,f=24,m=64,h=2,p=h+1,g=64,y=32;function d(t,e){const r=t.byteLength-g+e,a=new DataView(t),i=new Uint16Array(l);let n=r;for(let o=0;o<l;o+=1)i[o]=a.getUint16(n,s),n+=2;for(let s=0;s<l/2;s+=1){let t=0;for(let e=s+1;e<l;e+=1)i[s]===i[e]&&(t+=1);if(t>l/2)return i[s]}throw new Error(`Unable to find repeat code at offset from directory 0x${e.toString(16)}`)}function w(t,e,r){const a=t.byteLength-g+e,i=new DataView(t);let n=a;for(let o=0;o<l;o+=1)i.setUint16(n,r,s),n+=2}class v{static getActualSize(t){const e=new Uint8Array(t),r=i.Z.segacd.findIndex((t=>o.slice(u).every(((r,a)=>r===e[t-u+a]))));if(-1===r)throw new Error("This does not appear to be a Sega CD save file");return i.Z.segacd[r]}static isCorrectlyFormatted(t){try{v.getActualSize(t)}catch(e){return!1}return!0}static truncateToActualSize(t){return t.slice(0,v.getActualSize(t))}static makeEmptySave(t){const e=n.Z.getFilledArrayBuffer(t-o.length,0),r=new ArrayBuffer(o.length),a=new Uint8Array(r);o.forEach(((t,e)=>{a[e]=t}));const i=t/m-p;return v.setNumFreeBlocks(r,i),n.Z.concatArrayBuffers([e,r])}static getNumFiles(t){return d(t,f)}static getNumFreeBlocks(t){return d(t,c)}static setNumFiles(t,e){w(t,f,e)}static setNumFreeBlocks(t,e){w(t,c,e)}static getTotalAvailableBlocks(t){return Math.ceil(t.byteLength/m)-h}static resize(t,e){if(-1===i.Z.segacd.indexOf(e))throw new Error(`${e} bytes is not a valid size for a Sega CD save`);const r=v.truncateToActualSize(t);if(e===r.byteLength)return r;const a=v.getNumFiles(r),s=a%2===1?a+1:a,u=s*y,l=r.byteLength-o.length,c=l-u,f=r.slice(0,c),h=r.slice(c,c+u),p=r.slice(l),g=v.getNumFreeBlocks(r),d=(e-r.byteLength)/m,w=g+d;if(w<0){const t=r.byteLength/m,a=e/m;throw new Error(`Insufficient free blocks in file to change size from ${t} to ${a} blocks. Previous free blocks: ${g}`)}if(v.setNumFreeBlocks(p,w),e>r.byteLength){const t=n.Z.getFilledArrayBuffer(e-r.byteLength,0);return n.Z.concatArrayBuffers([f,t,h,p])}const S=r.byteLength-e,A=f.byteLength-S,F=f.slice(0,A),E=f.slice(A),b=new Uint8Array(E);return b.forEach((t=>{if(0!==t&&255!==t)throw new Error(`Cannot resize file down to ${e} bytes because it would remove a portion that contains game data`)})),n.Z.concatArrayBuffers([F,h,p])}}(0,a.Z)(v,"INTERNAL_SAVE_SIZE",8192)}}]);