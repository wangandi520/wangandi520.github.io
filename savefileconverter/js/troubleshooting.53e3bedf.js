"use strict";(self["webpackChunksave_file_converter"]=self["webpackChunksave_file_converter"]||[]).push([[831],{6900:function(t,e,a){a.r(e),a.d(e,{default:function(){return P}});var i=function(){var t=this,e=t._self._c;return e("div",{staticClass:"home"},[e("TroubleshootingUtils")],1)},n=[],r=function(){var t=this,e=t._self._c;return e("div",[e("b-container",[e("b-row",{attrs:{"no-gutters":"","align-h":"center","align-v":"start"}},[e("b-col",{attrs:{sm:"12",md:"5"}},[e("b-row",{attrs:{"no-gutters":"","align-h":"center","align-v":"start"}},[e("b-col",{attrs:{cols:"12"}},[e("b-jumbotron",{attrs:{fluid:"","header-level":t._f("mq")(t.$mq,{xs:5,sm:5,md:5,lg:5,xl:4})},scopedSlots:t._u([{key:"header",fn:function(){return[t._v("Emulator/Raw"),e("br"),t._v("Test save")]},proxy:!0}])})],1)],1),e("input-file",{attrs:{placeholderText:"Choose a file that you know works (*.srm)",acceptExtension:".srm",leaveRoomForHelpIcon:!0,helpText:"Make a test save using the emulator or cartridge that you want to use, to compare against the file that's not working.",id:"known-working-input-file","aria-controls":"collapse-test-save-data","aria-expanded":t.hasTestSaveData?"true":"false"},on:{load:function(e){return t.readTestSaveData(e)}}}),e("file-info",{attrs:{fileName:this.testSaveDataFilename,fileData:this.testSaveData,otherFileName:this.brokenSaveDataFilename,otherFileData:this.brokenSaveData,display:this.hasTestSaveData,id:"collapse-test-save-data",fileAttributeEqualVariant:"success",fileAttributeNotEqualVariant:"success"}})],1),e("b-col",{attrs:{sm:"12",md:"2",lg:"2",xl:"2","align-self":"start"}},[e("mq-layout",{attrs:{mq:["md","lg","xl"]}},[e("i",{staticClass:"fa fa-arrow-circle-right fa-3x horizontal-arrow"})]),e("mq-layout",{attrs:{mq:["xs","sm"]}},[e("i",{staticClass:"fa fa-arrow-circle-down fa-3x vertical-arrow"})])],1),e("b-col",{attrs:{sm:"12",md:"5","align-self":"start"}},[e("b-row",{attrs:{"no-gutters":"","align-h":"center","align-v":"start"}},[e("b-col",{attrs:{cols:"12"}},[e("b-jumbotron",{attrs:{fluid:"","header-level":t._f("mq")(t.$mq,{xs:5,sm:5,md:5,lg:5,xl:4})},scopedSlots:t._u([{key:"header",fn:function(){return[t._v("Emulator/Raw Needs fixed")]},proxy:!0}])})],1)],1),e("input-file",{attrs:{placeholderText:"Choose the file that's not working (*.srm)",acceptExtension:".srm",leaveRoomForHelpIcon:!0,helpText:"The system will compare the file that's not working against the test save you made to try and figure out how to change it.",id:"needs-fixed-input-file","aria-controls":"collapse-broken-save-data","aria-expanded":t.hasBrokenSaveData?"true":"false"},on:{load:function(e){return t.readBrokenSaveData(e)}}}),e("file-info",{attrs:{fileName:this.brokenSaveDataFilename,fileData:this.brokenSaveData,otherFileName:this.testSaveDataFilename,otherFileData:this.testSaveData,display:this.hasBrokenSaveData,id:"collapse-broken-save-data",fileAttributeEqualVariant:"success",fileAttributeNotEqualVariant:"danger"}})],1)],1),e("b-row",{staticClass:"justify-content-md-center",attrs:{"align-h":"center"}},[e("b-col",{attrs:{cols:"auto",sm:"4",md:"3",lg:"2","align-self":"center"}},[e("b-button",{staticClass:"troubleshooting-button",attrs:{variant:"success",block:"",disabled:!this.testSaveData||!this.brokenSaveData||this.filesAreSame},on:{click:function(e){return t.fixFile()}}},[this.filesAreSame?e("div",[t._v(" No differences found ")]):e("div",[t._v(" Attempt fix! ")])])],1)],1),e("b-row",[e("b-col",[e("div",{staticClass:"help"},[t._v(" Tip: if this tool doesn't work for you, try opening both files in a hex editor and look for similarities or differences that may help you fix the file. ")]),e("div",{staticClass:"help"},[t._v(" Did this page help you? Please tell me if it did or if it didn't: savefileconverter"+t._s(" ")+"(at)"+t._s(" ")+"gmail"+t._s(" ")+"(dot)"+t._s(" ")+"com ")])])],1)],1)],1)},s=[],l=a(2520),o=a.n(l),u=a(3162),d=a(1044),c=function(){var t=this,e=t._self._c;return e("b-collapse",{attrs:{appear:"",id:"id",visible:t.display}},[e("b-list-group",[e("b-list-group-item",{staticClass:"d-flex justify-content-between align-items-center",attrs:{variant:t.fileNameVariant}},[e("div",[t._v("File name:")]),e("div",[t._v(t._s(t.fileName))])]),e("b-list-group-item",{staticClass:"d-flex justify-content-between align-items-center",attrs:{variant:t.fileSizeVariant}},[e("div",[t._v("File size:")]),e("div",[t._v(t._s(t.fileSize)+" bytes")])]),e("b-list-group-item",{staticClass:"d-flex justify-content-between align-items-center",attrs:{variant:t.initialPaddingVariant}},[e("div",[t._v("Initial padding:")]),e("div",[t._v(t._s(t.initialPadding)+" bytes")])]),e("b-list-group-item",{staticClass:"d-flex justify-content-between align-items-center",attrs:{variant:t.remainingSaveSizeVariant}},[e("div",[t._v("Remaining save size:")]),e("div",[t._v(t._s(t.remainingSaveSize)+" bytes")])])],1)],1)},h=[],f=a(2976),m={name:"FileInfo",props:{fileName:null,fileData:null,otherFileName:null,otherFileData:null,fileAttributeEqualVariant:null,fileAttributeNotEqualVariant:null,id:null,display:{type:Boolean,default:!1}},computed:{fileSize(){return this.getFileSize(this.fileData)},initialPadding(){return this.getInitialPadding(this.fileData)},remainingSaveSize(){return this.getRemainingSaveSize(this.fileData)},fileNameVariant(){return this.fileName&&this.otherFileName?this.fileName===this.otherFileName?this.fileAttributeEqualVariant:this.fileAttributeNotEqualVariant:null},fileSizeVariant(){return this.getVariantForNumericalValue(this.getFileSize)},initialPaddingVariant(){return this.getVariantForNumericalValue(this.getInitialPadding)},remainingSaveSizeVariant(){return this.getVariantForNumericalValue(this.getRemainingSaveSize)}},methods:{getFileSize(t){return t?t.byteLength:0},getInitialPadding(t){return t?f.Z.getPadFromStartValueAndCount(t).count:0},getRemainingSaveSize(t){return this.getFileSize(t)-this.getInitialPadding(t)},getVariantForNumericalValue(t){return this.fileData&&this.otherFileData?t(this.fileData)===t(this.otherFileData)?this.fileAttributeEqualVariant:this.fileAttributeNotEqualVariant:null}}},g=m,v=a(1001),b=(0,v.Z)(g,c,h,!1,null,"b10c5b16",null),S=b.exports,p={name:"TroubleshootingUtils",data(){return{testSaveData:null,testSaveDataFilename:null,brokenSaveData:null,brokenSaveDataFilename:null,outputFilename:null}},computed:{hasTestSaveData:{get(){return null!==this.testSaveData},set(){}},hasBrokenSaveData:{get(){return null!==this.brokenSaveData},set(){}},filesAreSame(){return this.testSaveData&&this.brokenSaveData&&this.testSaveDataFilename===this.brokenSaveDataFilename&&f.Z.fileSizeAndPaddingFromStartIsSame(this.testSaveData,this.brokenSaveData)}},components:{InputFile:d.Z,FileInfo:S},methods:{readTestSaveData(t){this.testSaveData=t.arrayBuffer,this.testSaveDataFilename=o().basename(t.filename)},readBrokenSaveData(t){this.brokenSaveData=t.arrayBuffer,this.brokenSaveDataFilename=o().basename(t.filename)},fixFile(){const t=f.Z.attemptFix(this.testSaveData,this.brokenSaveData),e=new Blob([t],{type:"application/octet-stream"});(0,u.saveAs)(e,this.testSaveDataFilename)}}},F=p,y=(0,v.Z)(F,r,s,!1,null,"7dc6c454",null),D=y.exports,w={name:"TroubleshootingView",components:{TroubleshootingUtils:D}},k=w,x=(0,v.Z)(k,i,n,!1,null,null,null),P=x.exports},7978:function(t,e,a){function i(t){let e=0,a=t;while(0!==a)a>>=1,e+=1;return e}a.d(e,{Z:function(){return n}});class n{static getNextLargestPowerOf2(t){return t<=0?0:n.isPowerOf2(t)?t:1<<i(t)}static getNextSmallestPowerOf2(t){return t<=0?0:n.isPowerOf2(t)?t:1<<i(t)-1}static isPowerOf2(t){return!(t<=0)&&0===(t&t-1)}static getNextMultipleOf16(t){return t<=0?0:t+15>>>4<<4}static roundUpToNearest64Bytes(t){return t<0?0:t+63>>>6<<6}}},2976:function(t,e,a){a.d(e,{Z:function(){return r}});a(3408),a(4590),a(3462),a(3767),a(8585),a(8696);var i=a(7978);function n(t,e){const a=t.byteLength-e,n=i.Z.getNextLargestPowerOf2(a);return e-(n-a)}class r{static attemptFix(t,e){const a=r.getPadFromStartValueAndCount(t),i=r.getPadFromStartValueAndCount(e),n=r.removePaddingFromStart(t,a.count),s=r.removePaddingFromStart(e,i.count);let l=s;if(s.byteLength<n.byteLength){const t={value:0,count:n.byteLength-s.byteLength};l=r.addPaddingToEnd(s,t)}else s.byteLength>n.byteLength&&(l=r.removePaddingFromEnd(s,s.byteLength-n.byteLength));const o=r.addPaddingToStart(l,a);return o}static fileSizeAndPaddingFromStartIsSame(t,e){if(t.byteLength!==e.byteLength)return!1;const a=r.getPadFromStartValueAndCount(t),i=r.getPadFromStartValueAndCount(e);return a.count===i.count&&a.value===i.value}static getPadFromStartValueAndCount(t){const e=r.countPaddingFromStart(t,0),a=r.countPaddingFromStart(t,255);let i=0,s=e;return a>0&&(i=255,s=a),s=n(t,s),{value:i,count:s}}static getPadFromEndValueAndCount(t){const e=r.countPaddingFromEnd(t,0),a=r.countPaddingFromEnd(t,255);let i=0,s=e;return a>0&&(i=255,s=a),s=n(t,s),{value:i,count:s}}static removePaddingFromStart(t,e){return t.slice(e)}static removePaddingFromEnd(t,e){return t.slice(0,t.byteLength-e)}static addPaddingToStart(t,e){const a=new ArrayBuffer(t.byteLength+e.count),i=new Uint8Array(a),n=new Uint8Array(t);for(let r=0;r<e.count;r+=1)i[r]=e.value;return i.set(n,e.count),a}static addPaddingToEnd(t,e){const a=new ArrayBuffer(t.byteLength+e.count),i=new Uint8Array(a),n=new Uint8Array(t);i.set(n,0);for(let r=0;r<e.count;r+=1)i[t.byteLength+r]=e.value;return a}static padAtEndToMinimumSize(t,e,a){return r.addPaddingToEnd(t,{value:e,count:Math.max(a-t.byteLength,0)})}static countPaddingFromStart(t,e){const a=new Uint8Array(t);let i=0;for(let n=0;n<a.length;n+=1){if(a[n]!==e)break;i+=1}return i===t.byteLength&&(i=0),i}static countPaddingFromEnd(t,e){const a=new Uint8Array(t);let i=0;for(let n=a.length-1;n>=0;n-=1){if(a[n]!==e)break;i+=1}return i===t.byteLength&&(i=0),i}}}}]);