"use strict";(self["webpackChunksave_file_converter"]=self["webpackChunksave_file_converter"]||[]).push([[720],{1070:function(e,t,a){a.r(t),a.d(t,{default:function(){return Q}});var i=function(){var e=this,t=e._self._c;return t("div",{staticClass:"home"},[t("ConvertPs1Ps3")],1)},s=[],r=function(){var e=this,t=e._self._c;return t("div",[t("b-container",[t("b-row",{attrs:{"no-gutters":"","align-h":"center","align-v":"start"}},[t("b-col",{attrs:{sm:"12",md:"5","align-self":"start"}},[t("b-row",{attrs:{"no-gutters":"","align-h":"center","align-v":"start"}},[t("b-col",{attrs:{cols:"12"}},[t("b-jumbotron",{attrs:{fluid:"","header-level":e._f("mq")(e.$mq,{xs:5,sm:5,md:5,lg:5,xl:4})},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("PS3")]},proxy:!0}])})],1)],1),"convertToRaw"===this.conversionDirection?t("div",[t("input-file",{attrs:{errorMessage:this.errorMessage,placeholderText:"Choose files to add (*.PSV)",acceptExtension:".PSV",leaveRoomForHelpIcon:!1,allowMultipleFiles:!0},on:{load:function(t){return e.readPs3SaveData(t)}}}),t("file-list",{attrs:{display:null!==this.ps3SaveData,files:this.getFileListNames()},on:{change:function(t){return e.changeSelectedSaveData(t)}},model:{value:e.selectedSaveData,callback:function(t){e.selectedSaveData=t},expression:"selectedSaveData"}})],1):t("div",[t("output-filename",{attrs:{leaveRoomForHelpIcon:!1},model:{value:e.outputFilename,callback:function(t){e.outputFilename=t},expression:"outputFilename"}})],1)],1),t("b-col",{attrs:{sm:"12",md:"2",lg:"2",xl:"2","align-self":"start"}},[t("conversion-direction",{attrs:{horizontalLayout:["md","lg","xl"],verticalLayout:["xs","sm"],conversionDirection:this.conversionDirection},on:{change:function(t){return e.changeConversionDirection(t)}}})],1),t("b-col",{attrs:{sm:"12",md:"5","align-self":"start"}},[t("b-row",{attrs:{"no-gutters":"","align-h":"center","align-v":"start"}},[t("b-col",{attrs:{cols:"12"}},[t("b-jumbotron",{class:"md"===e.$mq&&"individual-saves"===this.individualSavesOrMemoryCard?"fix-jumbotron":"",attrs:{fluid:"","header-level":e._f("mq")(e.$mq,{xs:5,sm:5,md:5,lg:5,xl:4})},scopedSlots:e._u([{key:"header",fn:function(){return[e._v(e._s(e.individualSavesOrMemoryCardText))]},proxy:!0}])})],1)],1),"convertToRaw"===this.conversionDirection?t("div",["individual-saves"===this.individualSavesOrMemoryCard?t("div",[t("output-filename",{attrs:{leaveRoomForHelpIcon:!0,disabled:!0,helpText:"The filename for an individual save contains important information that the game needs to find this save data. Please do not modify it after downloading the save."},model:{value:e.outputFilename,callback:function(t){e.outputFilename=t},expression:"outputFilename"}})],1):t("div",[t("output-filename",{attrs:{leaveRoomForHelpIcon:!1},model:{value:e.outputFilename,callback:function(t){e.outputFilename=t},expression:"outputFilename"}})],1),t("individual-saves-or-memory-card-selector",{attrs:{value:this.individualSavesOrMemoryCard,individualSavesText:this.individualSavesText,memoryCardText:this.memoryCardText},on:{change:function(t){return e.changeIndividualSavesOrMemoryCard(t)}}})],1):t("div",[t("input-file",{attrs:{errorMessage:this.errorMessage,placeholderText:"Choose a file to convert",leaveRoomForHelpIcon:!1},on:{load:function(t){return e.readEmulatorSaveData(t)}}}),t("file-list",{attrs:{display:null!==this.ps3SaveData,files:this.getFileListNames(),enabled:!1}})],1)],1)],1),t("b-row",{staticClass:"justify-content-md-center",attrs:{"align-h":"center"}},[t("b-col",{attrs:{cols:"auto",sm:"4",md:"3",lg:"2","align-self":"center"}},[t("b-button",{staticClass:"ps1-ps3-convert-button",attrs:{variant:"success",block:"",disabled:this.convertButtonDisabled},on:{click:function(t){return e.convertFile()}}},[e._v(" Convert! ")])],1)],1),t("b-row",[t("b-col",[t("div",{staticClass:"help"},[e._v(" Help: how can I "),t("router-link",{attrs:{to:"/original-hardware?sort=ps1"}},[e._v("copy save files to and from a PS1 memory card")]),e._v("? ")],1),t("div",{staticClass:"help"},[e._v(" Help: how do IÂ "),t("b-link",{attrs:{href:"https://gbatemp.net/threads/tutorial-transfer-saves-from-ps1-to-ps3.573038/"}},[e._v("copy PS1 save files to and from my PS3")]),e._v("? (Begin at step 3) ")],1)])],1)],1)],1)},n=[],l=a(3162),o=a(3313),c=a(1044),u=a(2405),v=a(5482),d=a(1302),m=a(2074),h=(a(3408),a(4590),a(3462),a(3767),a(8585),a(8696),a(5847)),p=a(8804),S=a(8764)["Buffer"];const f=132,g=!0,D="\0VSP\0\0\0\0",F="US-ASCII",y=8,w=20,b=28,C=20,x=56,M=60,T=20,P=1,_=64,Z=68,I=72,O=4*h.Z.FRAME_SIZE,k=100,A=12,E=112,U=8,B="US-ASCII";function R(e,t){const a=k,i=A+U;return o.Z.trimNull(t.decode(e.slice(a,a+i)))}function $(e,t){const a=o.Z.trimNull(t.decode(e.slice(k,k+A))),i=e.slice(E,E+U),s=o.Z.getNullTerminatedArray(new Uint8Array(i),0),r=o.Z.uint8ArrayToHex(s);return`${a}${r}.PSV`}function L(e){const t=new ArrayBuffer(f),a=new Uint8Array(t),i=new DataView(t),s=new TextEncoder(F),r=new TextEncoder(B),n=h.Z.encodeFilename(e.filename,r);a.fill(0),a.set(s.encode(D),0),a.set(new Uint8Array(p.Z.SALT_SEED_INIT),y),a.set(n,k),i.setUint32(x,T,g),i.setUint32(M,P,g),i.setUint32(_,e.rawData.byteLength,g),i.setUint32(Z,f,g),i.setUint32(I,O,g),i.setUint32(92,8192,g),i.setUint32(96,36867,g);const l=o.Z.concatArrayBuffers([t,e.rawData]),c=p.Z.calculateSignature(l,p.Z.SALT_SEED_INIT,w,b,C),u=o.Z.setArrayBufferPortion(l,c,b,0,C),v=new TextDecoder(B);return{startingBlock:e.startingBlock,filename:$(t,v),description:e.description,rawData:u}}class N{static createFromPs3SaveFiles(e){const t=new TextDecoder(B),a=e.map((e=>{const a=e.rawData.slice(f),i=e.rawData.slice(0,f),s=new DataView(i);o.Z.checkMagic(i,0,D,F);const r=i.slice(y,y+w),n=p.Z.calculateSignature(e.rawData,r,w,b,C),l=S.from(i.slice(b,b+C));if(0!==l.compare(n))throw new Error(`Save appears to be corrupted: expected signature ${l.toString("hex")} but calculated signature ${n.toString("hex")}`);const c=s.getUint32(x,g),u=s.getUint32(M,g);if(c!==T||u!==P)throw new Error("This does not appear to be a PS1 save file");const v=s.getUint32(_,g),d=s.getUint32(Z,g),m=s.getUint32(I,g);if(v!==a.byteLength)throw new Error(`Size mismatch: size is specified as ${v} bytes in the header but actual save size is ${a.byteLength} bytes`);if(d!==f)throw new Error("Save appears to be corrupted: save start byte does not match header size");if(m!==O)throw new Error(`Save appears to be corrupted: save header size appears incorrect. Got ${m}`);return{startingBlock:null,filename:R(i,t),description:null,rawData:a}})),i=h.Z.createFromSaveFiles(a);return new N(i.getArrayBuffer())}static createFromPs1SaveFiles(e){const t=h.Z.createFromSaveFiles(e);return new N(t.getArrayBuffer())}constructor(e){this.memoryCard=h.Z.createFromPs1MemcardData(e),this.saveFiles=this.memoryCard.getSaveFiles(),this.ps3SaveFiles=this.saveFiles.map((e=>L(e)))}getSaveFiles(){return this.saveFiles}getPs3SaveFiles(){return this.ps3SaveFiles}getMemoryCard(){return this.memoryCard}}var H={name:"ConvertPs1Ps3",data(){return{ps3SaveData:null,errorMessage:null,inputFilename:null,outputFilename:null,conversionDirection:"convertToRaw",selectedSaveData:null,individualSavesOrMemoryCard:"memory-card",individualSavesText:"Individual save",memoryCardText:"Raw/emulator"}},components:{ConversionDirection:v.Z,InputFile:c.Z,OutputFilename:u.Z,FileList:d.Z,IndividualSavesOrMemoryCardSelector:m.Z},computed:{convertButtonDisabled(){const e="individual-saves"!==this.individualSavesOrMemoryCard||null!==this.selectedSaveData;return!this.ps3SaveData||0===this.ps3SaveData.getSaveFiles().length||!e||!this.outputFilename},individualSavesOrMemoryCardText(){return"individual-saves"===this.individualSavesOrMemoryCard?this.individualSavesText:this.memoryCardText}},methods:{changeIndividualSavesOrMemoryCard(e){this.individualSavesOrMemoryCard!==e&&(this.individualSavesOrMemoryCard=e,"individual-saves"===e?null===this.selectedSaveData&&this.changeSelectedSaveData(0):(null!==this.ps3SaveData&&this.ps3SaveData.getSaveFiles().length>0&&(this.outputFilename=o.Z.changeFilenameExtension(this.ps3SaveData.getSaveFiles()[0].filename,"mcr")),this.selectedSaveData=null))},getFileListNames(){return null!==this.ps3SaveData&&null!==this.ps3SaveData.getSaveFiles()?this.ps3SaveData.getSaveFiles().map((e=>({displayText:`${e.description} (${e.regionName})`}))):[]},changeConversionDirection(e){this.conversionDirection=e,this.ps3SaveData=null,this.errorMessage=null,this.inputFilename=null,this.outputFilename=null,this.selectedSaveData=null,this.individualSavesOrMemoryCard="memory-card","convertToFormat"===this.conversionDirection&&this.changeIndividualSavesOrMemoryCard("individual-saves")},changeSelectedSaveData(e){null!==e&&(null!==this.ps3SaveData&&this.ps3SaveData.getSaveFiles().length>0?(this.selectedSaveData=e,"convertToRaw"===this.conversionDirection?this.outputFilename=this.ps3SaveData.getSaveFiles()[this.selectedSaveData].filename:this.outputFilename=this.ps3SaveData.getPs3SaveFiles()[this.selectedSaveData].filename,this.changeIndividualSavesOrMemoryCard("individual-saves")):(this.selectedSaveData=null,this.outputFilename=null))},readPs3SaveData(e){this.errorMessage=null,this.selectedSaveData=null,this.inputFilename=null;try{const t=e.map((e=>({filename:e.filename,rawData:e.arrayBuffer})));this.ps3SaveData=N.createFromPs3SaveFiles(t),this.individualSavesOrMemoryCard=null,this.changeIndividualSavesOrMemoryCard("memory-card")}catch(t){this.errorMessage="File appears to not be in the correct format",this.ps3SaveData=null,this.selectedSaveData=null}},readEmulatorSaveData(e){this.errorMessage=null,this.selectedSaveData=null,this.inputFilename=null;try{const t=[{filename:e.filename,rawData:e.arrayBuffer}];this.ps3SaveData=N.createFromPs1SaveFiles(t),this.changeSelectedSaveData(0)}catch(t){this.errorMessage=t.message,this.ps3SaveData=null,this.selectedSaveData=null}},convertFile(){let e=null;e="convertToRaw"===this.conversionDirection?"individual-saves"===this.individualSavesOrMemoryCard?this.ps3SaveData.getSaveFiles()[this.selectedSaveData].rawData:this.ps3SaveData.getMemoryCard().getArrayBuffer():this.ps3SaveData.getPs3SaveFiles()[this.selectedSaveData].rawData;const t=new Blob([e],{type:"application/octet-stream"});(0,l.saveAs)(t,this.outputFilename)}}},V=H,z=a(1001),q=(0,z.Z)(V,r,n,!1,null,"01a88951",null),j=q.exports,G={name:"Ps1Ps3View",components:{ConvertPs1Ps3:j}},J=G,K=(0,z.Z)(J,i,s,!1,null,null,null),Q=K.exports}}]);